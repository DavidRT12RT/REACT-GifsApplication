{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","categories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","includes","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WACvC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAAMR,EAAWS,SAASP,IAClDH,GAAc,SAAAW,GAAI,OAAGR,GAAH,mBAAiBQ,OAEvCP,EAAc,KAId,SACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SAhBY,SAACR,GACrBF,EAAcE,EAAES,OAAOF,a,+BCPhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGXG,EAHW,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATxB,kBAaVM,GAbU,4CAAH,sDCETO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHsB,SAACA,GACvB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IACIqB,EDbqBK,CAAa1B,GAA7Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAInB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbhBgB,EAAc,WACvB,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAGA,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBACA,6BAEQA,EAAWyB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MCZjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1bbd3c5.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories,categories}) => {\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    };\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2 && !categories.includes(inputValue)){\r\n            setcategories(cats=>[inputValue,...cats]);\r\n        }\r\n        setinputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n//Proptypes\r\nAddCategory.propTypes={\r\n    setcategories:PropTypes.func.isRequired,\r\n    categories:PropTypes.array.isRequired\r\n}","  export const getGifs = async(category)=>{\r\n        //Peticion http para traer las imagenes de esa categoria\r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OYLOjF7oBYDDH5fhVn3u8WbWakkbaXWj`;\r\n        const resp=await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img=>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\nexport const GifGrid = ({category}) => {\r\n    //Estamos recibiendo data y loading y data lo sobrenombro como images\r\n    const {data:images,loading}=useFetchGifs(category);\r\n   \r\n\r\n  \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map(img=>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n)\r\n        }","import { useState ,useEffect} from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n     /*Le estoy diciendo que solamente ejecute esta funcion cuando el componenete se este \r\n    ejecutando por primera vez */\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            })\r\n    },[category]);\r\n    return state\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport const GifExpertApp =() => {\r\n    const [categories, setcategories] = useState([\"Dragon ball Z\"]);\r\n    //Con {} ponemos una expresion dentro del html \r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setcategories={setcategories} categories={categories}/>\r\n           <hr/>\r\n           <ol>\r\n                {\r\n                   categories.map(category =>(\r\n                       <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                       />\r\n                   )) \r\n                }\r\n\r\n           </ol>\r\n       </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}